name: Docker Build
description: Build docker images

inputs:
  container_repository:
    description: The container repository to store the image
    required: false
    default: 'nexus'

outputs:
  docker_repository:
    description: The docker repository used
    value: ${{ env.DOCKER_REPOSITORY }}
  version:
    description: The image version
    value: ${{ steps.version.outputs.version }}

runs:
  using: composite

  steps:

    - name: Extract version
      id: version
      uses: ./.github/actions/anemone-version
      with:
        branch_name: ${{ github.base_ref }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Nexus environment
      if: ${{ inputs.container_repository == 'nexus' }}
      run: |
        echo "REGISTRY=nexus.playtomic.io" >> $GITHUB_ENV
        echo "IMAGE=nexus.playtomic.io/${{ github.event.repository.name }}" >> $GITHUB_ENV
        echo "DOCKER_REPOSITORY=nexus.playtomic.io" >> $GITHUB_ENV
        echo "DOCKER_USERNAME=${{ secrets.dockernexus_username }}" >> $GITHUB_ENV
        echo "DOCKER_PASSWORD=${{ secrets.dockernexus_token }}" >> $GITHUB_ENV
      shell: bash

    - name: GHCR environment
      if: ${{ inputs.container_repository == 'ghcr' }}
      run: |
        echo "REGISTRY=ghcr.io" >> $GITHUB_ENV
        echo "IMAGE=nexus.playtomic.io/${{ github.event.repository.name }}" >> $GITHUB_ENV
        echo "DOCKER_REPOSITORY=ghcr.io/${{ github.repository_owner }}" >> $GITHUB_ENV  
        echo "DOCKER_USERNAME=${{ github.repository_owner }}" >> $GITHUB_ENV
        echo "DOCKER_PASSWORD=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
      shell: bash

    - name: Docker login
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}

    - name: Docker metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.IMAGE }}
        tags: |
          type=raw,value=${{ steps.version.outputs.version }}
          type=raw,value=latest

    - name: Build and push
      uses: docker/bake-action@v1.7.0
      with:
        files: |
          ${{ steps.meta.outputs.bake-file }}
          docker-compose.yml
        push: true
        set: |
          *.cache-from=type=registry,ref=${{ github.repository }}:latest
          *.cache-to=type=inline
